apiVersion: v1
kind: Pod
metadata:
  name: single-pod
  labels:
    env: dev
spec:
  containers:
  - name: testing-service
    image: docker.io/jagadesh1982/testing-service:latest
    ports:
     - containerPort: 9876
    env:
      - name: VERSION
        value: "1.0"
      - name: FRUIT
        value: "mango"
      - name: SLEEP
        value: "50"    
    readinessProbe:
      tcpSocket:
        port: 9876
      initialDelaySeconds: 5
      periodSeconds: 10 
    livenessProbe:
      initialDelaySeconds: 2
      periodSeconds: 5
      httpGet:
        path: /info
        port: 9876


# Sometimes, applications are temporarily unable to serve traffic. For example, an application might need to load large data or configuration files 
# during startup, or depend on external services after startup. In such cases, you don't want to kill the application, but you don't want to send it 
# requests either. Kubernetes provides readiness probes to detect and mitigate these situations. 

# A pod with containers reporting that they are not ready does not receive traffic through Kubernetes Services.

# Readiness probes runs on the container during its whole lifecycle.



# Common Fields for Probes

# initialDelaySeconds: Number of seconds after the container has started before liveness or readiness probes are initiated. Defaults to 0 seconds. 
# Minimum value is 0.

# periodSeconds: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.

# timeoutSeconds: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.

# successThreshold: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for
# liveness and startup Probes. Minimum value is 1.

# failureThreshold: When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means
# restarting the container. In case of readiness probe the Pod will be marked Unready. Defaults to 3. Minimum value is 1.
